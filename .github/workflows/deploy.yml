# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy App to VPS

on:
  push:
    branches: [ "workflow" ]

jobs:
  spring:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file ./dickname-backend/pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    
    - name: Upload artifact
      id: artifact-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: dickname-backend/target/*.jar
        overwrite: true
        if-no-files-found: error
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /opt/dickname/backend
          rm -f *.jar
          artifact_url=$(curl -L -s -o /dev/null -w "%{url_effective}" -H "Authorization: Bearer ${{ secrets.USER_TOKEN }}" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }}/zip")
          wget $artifact_url -O app.zip
          unzip app.zip
  
  
  angular:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: |
          cd dickname-frontend
          npm ci --legacy-peer-deps
          npm run build

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@v4
        with:
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: dickname-frontend/dist/dickname-frontend/browser
          TARGET: /opt/dickname/frontend
          SCRIPT_BEFORE: ls
